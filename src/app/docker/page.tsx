/** @format */
"use client";

import { useState } from "react";
import Link from "next/link";

const commands = [
  {
    section: "üß± –û—Å–Ω–æ–≤—ã Docker",
    items: [
      {
        cmd: "docker --version",
        descr: "–ü–æ–∫–∞–∑–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é Docker.",
      },
      {
        cmd: "docker info",
        descr: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ Docker.",
      },
      {
        cmd: "docker help",
        descr: "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º Docker.",
      },
    ],
  },
  {
    section: "üì¶ –†–∞–±–æ—Ç–∞ —Å –æ–±—Ä–∞–∑–∞–º–∏",
    items: [
      {
        cmd: "docker pull <–∏–º—è_–æ–±—Ä–∞–∑–∞>",
        descr: "–°–∫–∞—á–∞—Ç—å –æ–±—Ä–∞–∑ –∏–∑ Docker Hub.",
      },
      {
        cmd: "docker images",
        descr: "–°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤.",
      },
      {
        cmd: "docker rmi <ID_–∏–ª–∏_–∏–º—è>",
        descr: "–£–¥–∞–ª–∏—Ç—å –æ–±—Ä–∞–∑.",
      },
      {
        cmd: "docker build -t <–∏–º—è> .",
        descr: "–°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑ –∏–∑ Dockerfile –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ.",
      },
    ],
  },
  {
    section: "üê≥ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã",
    items: [
      {
        cmd: "docker run <–æ–±—Ä–∞–∑>",
        descr: "–°–æ–∑–¥–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.",
      },
      {
        cmd: "docker run -it <–æ–±—Ä–∞–∑> /bin/bash",
        descr: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–º.",
      },
      {
        cmd: "docker ps",
        descr: "–°–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤.",
      },
      {
        cmd: "docker ps -a",
        descr: "–í—Å–µ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ) –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã.",
      },
      {
        cmd: "docker stop <container_id>",
        descr: "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.",
      },
      {
        cmd: "docker start <container_id>",
        descr: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.",
      },
      {
        cmd: "docker restart <container_id>",
        descr: "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.",
      },
      {
        cmd: "docker rm <container_id>",
        descr: "–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.",
      },
      {
        cmd: "docker exec -it <container_id> /bin/bash",
        descr: "–ó–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä—å —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.",
      },
      {
        cmd: "docker logs <container_id>",
        descr: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.",
      },
    ],
  },
  {
    section: "üåâ –°–µ—Ç–∏ –∏ —Ç–æ–º–∞",
    items: [
      {
        cmd: "docker network ls",
        descr: "–°–ø–∏—Å–æ–∫ —Å–µ—Ç–µ–π Docker.",
      },
      {
        cmd: "docker network create <–∏–º—è>",
        descr: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Ç—å.",
      },
      {
        cmd: "docker volume ls",
        descr: "–°–ø–∏—Å–æ–∫ —Ç–æ–º–æ–≤ Docker.",
      },
      {
        cmd: "docker volume create <–∏–º—è>",
        descr: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–º.",
      },
      {
        cmd: "docker run -v <volume>:/path <–æ–±—Ä–∞–∑>",
        descr: "–°–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–º –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.",
      },
      {
        cmd: "docker run -p 8080:80 <–æ–±—Ä–∞–∑>",
        descr: "–ü—Ä–æ–±—Ä–æ—Å–∏—Ç—å –ø–æ—Ä—Ç 80 –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç 8080 —Ö–æ—Å—Ç–∞.",
      },
    ],
  },
  {
    section: "üßπ –û—á–∏—Å—Ç–∫–∞",
    items: [
      {
        cmd: "docker system prune -f",
        descr: "–û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –æ–±—Ä–∞–∑—ã –∏ —Ç–æ–º–∞.",
      },
      {
        cmd: "docker image prune -a",
        descr: "–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã.",
      },
      {
        cmd: "docker container prune",
        descr: "–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã.",
      },
      {
        cmd: "docker volume prune",
        descr: "–£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–æ–º–∞.",
      },
    ],
  },
  {
    section: "üí° Docker Compose",
    items: [
      {
        cmd: "docker-compose up",
        descr: "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –≤ —Ñ–æ–Ω–µ —Å–æ–≥–ª–∞—Å–Ω–æ docker-compose.yml.",
      },
      {
        cmd: "docker-compose up -d",
        descr: "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –≤ —Ñ–æ–Ω–µ (detached).",
      },
      {
        cmd: "docker-compose down",
        descr: "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã.",
      },
      {
        cmd: "docker-compose build",
        descr: "–°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ docker-compose.yml.",
      },
      {
        cmd: "docker-compose logs",
        descr: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤.",
      },
      {
        cmd: "docker-compose ps",
        descr: "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å.",
      },
    ],
  },
];

function CommandBlock({ cmd, descr }: { cmd: string; descr: string }) {
  const [copied, setCopied] = useState(false);

  // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ <...>
  const highlighted = cmd.replace(
    /<([^>]+)>/g,
    '<span class="text-blue-500 font-semibold">&lt;$1&gt;</span>'
  );

  return (
    <div className="flex flex-col gap-1 mb-4 group">
      <div className="flex items-center bg-gray-800 rounded-lg px-3 py-2">
        <code
          className="flex-1 text-green-400 text-base select-all break-all"
          dangerouslySetInnerHTML={{ __html: highlighted }}
        />
        <button
          className="ml-4 px-3 py-1 rounded bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium transition"
          onClick={() => {
            navigator.clipboard.writeText(cmd);
            setCopied(true);
            setTimeout(() => setCopied(false), 1500);
          }}
        >
          {copied ? "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!" : "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å"}
        </button>
      </div>
      <div className="text-xs text-gray-500 pl-1">{descr}</div>
    </div>
  );
}

export default function DockerCheatSheet() {
  return (
    <div className="bg-gray-100 min-h-screen py-8 px-3 md:px-0">
      <div className="max-w-2xl mx-auto">
        <h1 className="text-3xl font-bold mb-6 flex items-center gap-2">
          üê≥ Docker: —à–ø–∞—Ä–≥–∞–ª–∫–∞
        </h1>
        {commands.map(({ section, items }) => (
          <section className="mb-8" key={section}>
            <h2 className="text-xl font-semibold mb-3">{section}</h2>
            {items.map(({ cmd, descr }) => (
              <CommandBlock key={cmd} cmd={cmd} descr={descr} />
            ))}
          </section>
        ))}
        <div className="mt-12 text-xs text-gray-400 text-center">
          <Link
            href="https://docs.docker.com/engine/reference/commandline/docker/"
            target="_blank"
            className="underline hover:text-blue-500"
          >
            –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Docker CLI
          </Link>
        </div>
      </div>
    </div>
  );
}
