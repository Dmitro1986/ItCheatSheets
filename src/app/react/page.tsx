/** @format */
"use client";

import { useState } from "react";
import Link from "next/link";

const commands = [
  {
    section: "üß± –û—Å–Ω–æ–≤—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞",
    items: [
      {
        cmd: "function Hello() {\n  return <div>–ü—Ä–∏–≤–µ—Ç, React!</div>;\n}",
        descr: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.",
      },
      {
        cmd: "export default Hello;",
        descr: "–≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.",
      },
      {
        cmd: "import Hello from './Hello';",
        descr: "–ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.",
      },
      {
        cmd: "<Hello />",
        descr: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ JSX.",
      },
    ],
  },
  {
    section: "üîó –ü—Ä–æ–ø—Å—ã –∏ children",
    items: [
      {
        cmd: "function Greet({ name }) {\n  return <p>Hi, {name}!</p>;\n}",
        descr: "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–ø—Å–æ–≤ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç.",
      },
      {
        cmd: '<Greet name="Vlad" />',
        descr: "–ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–æ–ø—Å–æ–≤.",
      },
      {
        cmd: "function Wrapper({ children }) {\n  return <div>{children}</div>;\n}",
        descr: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ children –¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ JSX.",
      },
    ],
  },
  {
    section: "‚ö° useState, useEffect",
    items: [
      {
        cmd: "import { useState } from 'react';\nconst [count, setCount] = useState(0);",
        descr: "–•—É–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è.",
      },
      {
        cmd: "setCount(count + 1);",
        descr: "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è.",
      },
      {
        cmd: "import { useEffect } from 'react';\nuseEffect(() => {\n  // –∫–æ–¥ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏\n}, []);",
        descr: "–•—É–∫ —ç—Ñ—Ñ–µ–∫—Ç–∞ (–∞–Ω–∞–ª–æ–≥ componentDidMount).",
      },
      {
        cmd: "useEffect(() => {\n  // —ç—Ñ—Ñ–µ–∫—Ç\n  return () => {/* –æ—á–∏—Å—Ç–∫–∞ */};\n}, [count]);",
        descr: "–≠—Ñ—Ñ–µ–∫—Ç —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –∏ –æ—á–∏—Å—Ç–∫–æ–π.",
      },
    ],
  },
  {
    section: "üîÑ –°–ø–∏—Å–∫–∏ –∏ –∫–ª—é—á–∏",
    items: [
      {
        cmd: "{arr.map(item => <li key={item.id}>{item.name}</li>)}",
        descr: "–†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –ø–æ –º–∞—Å—Å–∏–≤—É —Å –∫–ª—é—á–∞–º–∏.",
      },
      {
        cmd: "const list = [1,2,3];\nreturn <ul>{list.map(x => <li key={x}>{x}</li>)}</ul>;",
        descr: "–ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å–ø–∏—Å–∫–∞.",
      },
    ],
  },
  {
    section: "üìã –§–æ—Ä–º—ã",
    items: [
      {
        cmd: "<input value={text} onChange={e => setText(e.target.value)} />",
        descr: "–£–ø—Ä–∞–≤–ª—è–µ–º—ã–π input.",
      },
      {
        cmd: "const onSubmit = e => {\n  e.preventDefault();\n  // –æ–±—Ä–∞–±–æ—Ç–∫–∞\n};",
        descr: "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã.",
      },
      {
        cmd: "<form onSubmit={onSubmit}>...</form>",
        descr: "–û–±—Ä–∞–±–æ—Ç–∫–∞ submit —Å–æ–±—ã—Ç–∏—è.",
      },
    ],
  },
  {
    section: "üîß –ü–æ–ª–µ–∑–Ω—ã–µ —Ö—É–∫–∏",
    items: [
      {
        cmd: "const ref = useRef(null);",
        descr: "–°–æ–∑–¥–∞—Ç—å ref –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ DOM-—ç–ª–µ–º–µ–Ω—Ç—É.",
      },
      {
        cmd: "useMemo(() => compute(), [deps]);",
        descr: "–ú–µ–º–æ–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è.",
      },
      {
        cmd: "useCallback(fn, [deps]);",
        descr: "–ú–µ–º–æ–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏.",
      },
      {
        cmd: "const ctx = useContext(MyContext);",
        descr: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.",
      },
    ],
  },
  {
    section: "üß© –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã—à–µ (lifting state up)",
    items: [
      {
        cmd: "// –í —Ä–æ–¥–∏—Ç–µ–ª–µ:\nconst [val, setVal] = useState('');\n<MyChild value={val} onChange={setVal} />",
        descr: "–ü–æ–¥—ä—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.",
      },
      {
        cmd: "// –í –ø–æ—Ç–æ–º–∫–µ:\n<input value={value} onChange={e => onChange(e.target.value)} />",
        descr: "–ü–µ—Ä–µ–¥–∞—á–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å—ã.",
      },
    ],
  },
  {
    section: "üí° –†–∞–∑–Ω–æ–µ",
    items: [
      {
        cmd: "const Component = () => null;",
        descr: "–ü—É—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç).",
      },
      {
        cmd: "<Fragment>...</Fragment> –∏–ª–∏ <>...</>",
        descr: "–§—Ä–∞–≥–º–µ–Ω—Ç ‚Äî –±–µ–∑ –æ–±—ë—Ä—Ç–∫–∏ –≤ div.",
      },
      {
        cmd: "props && ...",
        descr: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–ø—Å–æ–≤.",
      },
      {
        cmd: "Array.isArray(arr) && arr.map(...)",
        descr: "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–∞—Å—Å–∏–≤–∞.",
      },
      {
        cmd: "// –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ JSX: {/* ... */}",
        descr: "JSX-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.",
      },
    ],
  },
];

function CommandBlock({ cmd, descr }: { cmd: string; descr: string }) {
  const [copied, setCopied] = useState(false);

  // –ü—Ä–∏–º–∏—Ç–∏–≤–Ω–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞: –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç <...> –∏ –ø—Ä–æ–ø—Å—ã (name=...), –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–∞—Å–∏–≤–æ.
  const highlighted = cmd
    .replace(
      /<([^>]+)>/g,
      '<span class="text-blue-500 font-semibold">&lt;$1&gt;</span>'
    )
    .replace(
      /([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*{?/g,
      '<span class="text-green-400">$1</span>='
    )
    .replace(/\n/g, "<br/>")
    .replace(/"(.*?)"/g, '<span class="text-yellow-300">"$1"</span>');

  return (
    <div className="flex flex-col gap-1 mb-4 group">
      <div className="flex items-center bg-gray-800 rounded-lg px-3 py-2">
        <code
          className="flex-1 text-green-300 text-base select-all break-all"
          dangerouslySetInnerHTML={{ __html: highlighted }}
        />
        <button
          className="ml-4 px-3 py-1 rounded bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium transition"
          onClick={() => {
            navigator.clipboard.writeText(cmd.replace(/<br\/>/g, "\n"));
            setCopied(true);
            setTimeout(() => setCopied(false), 1500);
          }}
        >
          {copied ? "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!" : "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å"}
        </button>
      </div>
      <div className="text-xs text-gray-500 pl-1">{descr}</div>
    </div>
  );
}

export default function ReactCheatSheet() {
  return (
    <div className="bg-gray-100 min-h-screen py-8 px-3 md:px-0">
      <div className="max-w-2xl mx-auto">
        <h1 className="text-3xl font-bold mb-6 flex items-center gap-2">
          ‚öõÔ∏è React: —à–ø–∞—Ä–≥–∞–ª–∫–∞
        </h1>
        {commands.map(({ section, items }) => (
          <section className="mb-8" key={section}>
            <h2 className="text-xl font-semibold mb-3">{section}</h2>
            {items.map(({ cmd, descr }) => (
              <CommandBlock key={cmd + descr} cmd={cmd} descr={descr} />
            ))}
          </section>
        ))}
        <div className="mt-12 text-xs text-gray-400 text-center">
          <Link
            href="https://react.dev/learn"
            target="_blank"
            className="underline hover:text-blue-500"
          >
            –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è React
          </Link>
        </div>
      </div>
    </div>
  );
}
